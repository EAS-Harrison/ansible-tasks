---
- name: Update subscription manager
  command: subscription-manager refresh

- name: Install 
  become_user: root
  yum:
    name: 
      - wget
      - unzip

- name: Get vault repo
  get_url: 
    url: "{{ url }}"
    dest: "{{ location_zip }}"
  
- name: Unarchive vault
  ansible.builtin.unarchive:
    src: "{{ location_zip }}" 
    dest: /opt/
    remote_src: yes

- name: Copy file with owner and permissions
  ansible.builtin.copy:
    src: /opt/vault
    dest: /usr/bin
    remote_src: yes

- name: Create a directory
  ansible.builtin.file:
    path: /etc/vault
    state: directory

- name: Create a directory
  ansible.builtin.file:
    path: /etc/vault-data
    state: directory

- name: Create a directory
  ansible.builtin.file:
    path: /logs/vault/
    state: directory

- name: make config.json
  blockinfile:
    dest: /etc/vault/config.json
    block: |
      {
      "listener": [{
      "tcp": {
      "address" : "0.0.0.0:8200",
      "tls_disable" : 1
      }
      }],
      "api_addr": "http://{{ target_url }}:8200",
      "storage": {
          "file": {
          "path" : "/vault-data"
          }
       },
      "max_lease_ttl": "10h",
      "default_lease_ttl": "10h",
      "ui":true
      }

    insertafter: EOF
    create: yes


- name: make vault.service
  blockinfile:
    dest: /etc/systemd/system/vault.service
    block: |
      [Unit]
      Description=vault service
      Requires=network-online.target
      After=network-online.target
      ConditionFileNotEmpty=/etc/vault/config.json

      [Service]
      EnvironmentFile=-/etc/sysconfig/vault
      Environment=GOMAXPROCS=2
      Restart=on-failure
      ExecStart=/usr/bin/vault server -config=/etc/vault/config.json
      StandardOutput=/logs/vault/output.log
      StandardError=/logs/vault/error.log
      LimitMEMLOCK=infinity
      ExecReload=/bin/kill -HUP $MAINPID
      KillSignal=SIGTERM

      [Install]
      WantedBy=multi-user.target
    insertafter: EOF
    create: yes

- name: Allow traffic
  ansible.posix.firewalld:
    port: 8200/tcp
    permanent: yes
    state: enabled

- name: Restart firewall
  service:
    name: firewalld
    state: reloaded

- name: enable vault
  service:
    name: vault
    enabled: true
    state: started

- name: Set env variables
  shell: export VAULT_ADDR=http://{{ target_url }}:8200

- name: Add env var
  lineinfile:
    line: VAULT_ADDR=http://{{ target_url }}:8200
    dest: ~/.bashrc

- name: Initiate server
  command: vault operator init > /etc/vault/init.file